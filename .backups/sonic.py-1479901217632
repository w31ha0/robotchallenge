from config import interface, SensorPort, motors
import time
import math

class Sonic:
    sonicArr = []

    def __init__(self):
        print "Instantiated sonic class"

    def getSonar(self):
        usReading = interface.getSensorValue(SensorPort)[0]
        return usReading

    def rotateSonar(self, angleRad):
        prevAngle = interface.getMotorAngle(motors[2])[0]
        interface.increaseMotorAngleReference(motors[2], angleRad)
        while not interface.motorAngleReferenceReached(motors[2]):
            angle = interface.getMotorAngle(motors[2])[0]
            if math.degrees(abs(angle - prevAngle)) >= 5:
                print (angle - prevAngle)/math.pi*180
                prevAngle = angle
                self.sonicArr.append(self.getSonar())
        return self.sonicArr

sonicObj = Sonic()

sonicArrr = sonicObj.rotateSonar(2*math.pi)

print sonicArrr
